"0","library(ggplot2)"
"0","library(dplyr)"
"0","library(tidyr)"
"0","library(stringr)  # for str_detect"
"0",""
"0","taylorswift <- read.csv(""taylorswift.csv"")  # Adjust path as needed"
"0",""
"0","selected_albums <- c(""Taylor Swift"", ""Fearless (Platinum Edition)"", ""Fearless (Taylor's Version)"", "
"0","                     ""Speak Now (Deluxe)"", ""Speak Now (Taylor's Version)"","
"0","                     ""Red (Deluxe Version)"", ""Red (Taylor's Version)"","
"0","                     ""1989 (Deluxe)"", ""1989 (Taylor's Version) [Tangerine Edition]"","
"0","                     ""reputation"", ""Lover"", ""folklore (deluxe version)"","
"0","                     ""evermore (deluxe version)"", ""Midnights (3am Edition)"")"
"0",""
"0","taylorswift <- taylorswift %>%"
"0","  filter(album_title %in% selected_albums)"
"0",""
"0","genres <- c('Country', 'Country Rock', 'American Folk', 'Folk', 'Ballad', 'Pop')"
"0","cur_col <- taylorswift$song_tags"
"0","taylorswift$Country = as.numeric(str_detect(cur_col, pattern = genres[[1]]))"
"0","taylorswift$Country_Rock = as.numeric(str_detect(cur_col, pattern = genres[[2]]))"
"0","taylorswift$American_Folk = as.numeric(str_detect(cur_col, pattern = genres[[3]]))"
"0","taylorswift$Folk = as.numeric(str_detect(cur_col, pattern = genres[[4]]))"
"0","taylorswift$Ballad = as.numeric(str_detect(cur_col, pattern = genres[[5]]))"
"0","taylorswift$Pop = as.numeric(str_detect(cur_col, pattern = genres[[6]]))"
"0",""
"0","genre_columns <- c(""Country"", ""Country_Rock"", ""American_Folk"", ""Folk"", ""Ballad"", ""Pop"")"
"0","genre_data <- taylorswift %>%"
"0","  select(album_title, song_page_views, all_of(genre_columns)) %>%"
"0","  pivot_longer(cols = genre_columns, names_to = ""Genre"", values_to = ""Present"") %>%"
"0","  filter(Present == 1) %>%"
"0","  group_by(album_title, Genre) %>%"
"0","  summarize(Average_Views = mean(song_page_views, na.rm = TRUE), .groups = 'drop')"
"0",""
"0","# Heatmap plot"
"0","ggplot(genre_data, aes(x = album_title, y = Genre, fill = Average_Views)) + "
"0","  geom_tile() +"
"0","  scale_fill_gradient(low = ""blue"", high = ""red"") +"
"0","  labs(title = ""Genre Popularity by Selected Albums"", x = ""Album"", y = ""Genre"") +"
"0","  theme(axis.text.x = element_text(angle = 45, hjust = 1))  "
